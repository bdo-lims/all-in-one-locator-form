version: '3.3'
services:
  locator-form-data:
    container_name: lf-postgres
    image: postgres:12-alpine
    restart: always
    env_file:
      - ./prod/database/postgres/database.env # configure postgres
    volumes:
      - /var/lib/locator-form/postgresdata:/var/lib/postgresql/data
      - ./prod/database/postgres/init/:/docker-entrypoint-initdb.d/
    networks:
      - backend-network
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: ["CMD", "pg_isready"]
      timeout: 10s
      interval: 30s
      retries: 3

  fhir.openelis.org:
    container_name: lf-hapi-fhir-jpaserver
    build:
      context: ./prod/fhir/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8448:8443
    volumes:
      - ./prod/properties/application.yaml:/data/hapi/application.yaml
      - ./prod/tomcat/hapi_server.xml:/usr/local/tomcat/conf/server.xml
      - ./prod/ssl/lf.keystore:/usr/local/tomcat/certs/keystore
      - ./prod/ssl/lf.truststore:/usr/local/tomcat/certs/truststore
      - ./prod/fhir/healthcheck.sh:/healthcheck.sh
    environment: 
      SPRING_CONFIG_LOCATION: file:///data/hapi/application.yaml
    networks:
      - backend-network
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      timeout: 10s
      interval: 30s
      retries: 3
      
  locator-form.openelis.org:
    image: locator-form-webapp
    build:
       context: ./locator-form-webapp
       dockerfile: docker/docker-build/Dockerfile
    restart: always
    extra_hosts:
      - infohighway.govmu.org:192.168.6.91
    volumes:
      - ./prod/properties/locatorform-app.properties:/var/lib/locatorform/app.properties
      - ./prod/velocity:/var/lib/locatorform/velocity
      - ./prod/ssl/lf_frontend.keystore:/usr/local/tomcat/certs/server.keystore
      - ./prod/ssl/lf.keystore:/usr/local/tomcat/certs/keystore
      - ./prod/ssl/lf.truststore:/usr/local/tomcat/certs/truststore
      - ./prod/webapp/healthcheck.sh:/healthcheck.sh
    networks:
      - frontend-network
      - backend-network
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      timeout: 10s
      interval: 30s
      retries: 3
      
  locator-form-frontend:
    image: locator-form
    build:
      context: ./locator-form-frontend
      dockerfile: ./Dockerfile.prod
    depends_on:
      - locator-form.openelis.org
      - nginx
    restart: always
    networks:
      - frontend-network
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: "curl -sSk http://locator-form-frontend || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      
  auth.openelis.org:
    image:
      quay.io/keycloak/keycloak:15.0.2
    restart: always
    ports:
      - 7600:7600
    environment:
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
      KEYCLOAK_USER_FILE: /var/lib/keycloak/admin/username
      KEYCLOAK_PASSWORD_FILE: /var/lib/keycloak/admin/password
      DB_VENDOR: postgres
      DB_ADDR: locator-form-data
      DB_PORT: 5432
      DB_DATABASE: locator-form?currentSchema=keycloak
      DB_SCHEMA: keycloak
      DB_USER_FILE: /var/lib/keycloak/db/username
      DB_PASSWORD_FILE: /var/lib/keycloak/db/password
      PROXY_ADDRESS_FORWARDING: 'true'
      JGROUPS_DISCOVERY_EXTERNAL_IP: host.openelis.org
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS keycloak.JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    networks:
      - frontend-network
      - backend-network
    volumes:
      - ./prod/ssl/lf_frontend.crt:/etc/x509/https/tls.crt
      - ./prod/ssl/lf_frontend.key:/etc/x509/https/tls.key
      - ./prod/keycloak/imports:/opt/jboss/keycloak/imports
      - ./prod/keycloak/admin:/var/lib/keycloak/admin
      - ./prod/keycloak/db:/var/lib/keycloak/db
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: "curl -sSk https://auth.openelis.org:8443/auth/realms/Airport || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./prod/conf/nginx_main.conf:/etc/nginx/conf.d/default.conf
      - ./prod/ssl/lf_frontend.crt:/etc/nginx/serverCerts/lf.crt
      - ./prod/ssl/lf_frontend.key:/etc/nginx/serverCerts/lf.key
      - ./prod/ssl/key_pass_frontend:/etc/nginx/private/key_pass
    networks:
      - frontend-network
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    healthcheck:
      test: "service nginx status || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    
  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal:1.2.0
    tty: true
    restart: always
    networks:
      - frontend-network
      - backend-network
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "local"
      options:
        max-size: "20m"
        max-file: "50"
    
networks:
  frontend-network: 
  backend-network: 
